Examples:
================================================================================
3-bit system:
for unsigned (only positive) int: maximum: 111 = 7 = 2^3 - 1 

8-bit system:
for unsigned int: maximum: 11111111 = 2^8 - 1 = 255

for signed int: we can use the first bit to store the information whether the
int is positive (0) or negative (1)

3-bit system:
for signed int: maximum: 2^(3-1) - 1 = 3

8-bit system:
for signed int: maximum: 2^(8-1) - 1 = 127


How do you store the numbers, in order to make arithmetic easy?
================================================================================

000 = 0
001 = 1
010 = 2
011 = 3
100 = -0
101 = -1
110 = -2 
111 = -3

001 + 101 = 110 => 1 + (-1) = -2: wrong answer!

One's complement system:
------------------------
000 = 0
001 = 1
010 = 2
011 = 3
100 = -3
101 = -2
110 = -1
111 = -0

011 + 100 = 111 => 3 + (-3) = -0: correct!

011 + 101 = 1000 = (move overflow bit to first position) 001 => 3 + (-2) = 1: correct!

Two's complement system:
------------------------
000 = 0
001 = 1
010 = 2
011 = 3
100 = -4
101 = -3
110 = -2
111 = -1

010 + 110 = 1000 = (discard overflow bit) 000 => 2 + (-2) = 0: correct!
011 + 100 = 111 => 3 + (-4) = -1: correct!